[build-system]
requires      = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "numword-georgia"
dynamic = ["version"]
description = "Convert numbers to words in Georgian"
license = "MIT"
authors = [
  { name = "Sergei Blinov", email = "blinovsv@gmail.com" },
]
readme = "README.md"
keywords = [
  "numword",
  "numbers",
  "georgia",
]
requires-python = ">=3.7"
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = []

  [project.urls]
  Documentation = "https://github.com/awnion/numword-georgia/#readme"
  Issues        = "https://github.com/awnion/numword-georgia/issues"
  Source        = "https://github.com/awnion/numword-georgia"

[tool.hatch.version]
path = "src/numword_georgia/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
  [tool.hatch.envs.default.scripts]
  test = "pytest {args:tests}"
  test-cov = "coverage run -m pytest {args:tests}"
  cov-report = [
    "- coverage combine",
    "coverage report",
  ]
  cov = [
    "test-cov",
    "cov-report",
  ]

  [[tool.hatch.envs.all.matrix]]
  python = [
    "3.7",
    "3.8",
    "3.9",
    "3.10",
    "3.11",
  ]

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black>=23.1.0",
  "mypy>=1.0.0",
  "ruff>=0.0.243",
]

  [tool.hatch.envs.lint.scripts]
  typing = "mypy --install-types --non-interactive {args:src/numword_georgia tests}"
  style = [
    "ruff {args:.}",
    "black --check --diff {args:.}",
  ]
  fmt = [
    "taplo fmt",
    "black {args:.}",
    "ruff --fix {args:.}",
    "style",
  ]
  all = ["style", "typing"]

[tool.black]
target-version = ["py37"]
line-length    = 120

skip-string-normalization = true

[tool.ruff]
target-version = "py37"
line-length    = 120

select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105",
  "S106",
  "S107",
  # Ignore complexity
  "C901",
  "PLR0911",
  "PLR0912",
  "PLR0913",
  "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

  [tool.ruff.isort]
  known-first-party = [
    "numword_georgia",
  ]

  [tool.ruff.flake8-tidy-imports]
  ban-relative-imports = "all"

  [tool.ruff.per-file-ignores]
  # Tests can use magic values, assertions, and relative imports
  "tests/**/*" = [
    "PLR2004",
    "S101",
    "TID252",
  ]

  [tool.coverage.run]
  source_pkgs = [
    "numword_georgia",
    "tests",
  ]
  branch = true
  parallel = true
  omit = [
    "src/numword_georgia/__about__.py",
  ]

  [tool.coverage.paths]
  numword_georgia = [
    "src/numword_georgia",
  ]
  tests = ["tests"]

  [tool.coverage.report]
  exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
  ]
